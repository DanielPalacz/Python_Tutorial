
https://www.python.org/dev/peps/pep-0257/


What is a Docstring?
A docstring is a string literal that occurs as the first statement in a module, function, class, or method definition. 
Such a docstring becomes the __doc__ special attribute of that object.



Recomendations:

- ALL modules should normally have docstrings, and ALL functions and classes exported by a module should also have docstrings.
- Public methods (including the __init__ constructor) should also have docstrings. 
- A package may be documented in the module docstring of the __init__.py file in the package directory.



	-------------------------------------------------------------------------------------------
	"additional stuff"
	-------------------------------------------------------------------------------------------
	String literals occurring elsewhere in Python code may also act as documentation. 
	They are not recognized by the Python bytecode compiler and are not accessible as runtime object attributes (i.e. not assigned to __doc__), 
	but two types of extra docstrings may be extracted by software tools:

	String literals occurring immediately after a simple assignment at the top level of a module, class, or __init__ method are called "attribute docstrings".
	String literals occurring immediately after another docstring are called "additional docstrings".
	Please see PEP 258, "Docutils Design Specification" [2], for a detailed description of attribute and additional docstrings.
	-------------------------------------------------------------------------------------------



For consistency, always use """triple double quotes""" around docstrings. 
Use r"""raw triple double quotes""" if you use any backslashes in your docstrings. 
For Unicode docstrings, use u"""Unicode triple-quoted strings""".



There are two forms of docstrings: one-liners and multi-line docstrings.


One-line Docstrings
One-liners are for really obvious cases. They should really fit on one line. For example:

def kos_root():
    """Return the pathname of the KOS root directory."""
    global _kos_root
    if _kos_root: return _kos_root
    ...


Multi-line Docstrings
Multi-line docstrings consist of a summary line just like a one-line docstring, followed by a blank line, followed by a more elaborate description. 
The summary line may be used by automatic indexing tools; it is important that it fits on one line and is separated from the rest of the docstring by a blank line. 
The summary line may be on the same line as the opening quotes or on the next line. The entire docstring is indented the same as the quotes at its first line (see example below).





General Notes:


- Triple quotes are used even though the string fits on one line. This makes it easy to later expand it. The closing quotes are on the same line as the opening quotes. This looks better for one-liners.
- It is not expected to put blank line either before or after the docstring. However it depends on programmer style.
The docstring is a phrase ending in a period. It prescribes the function or method's effect as a command ("Do this", "Return that"), not as a description; e.g. don't write "Returns the pathname ...".









Summary (for different abstractions):


1. a stand-alone program

The docstring of a script (a stand-alone program) should be usable as its "usage" message, printed when the script is invoked with incorrect or missing arguments (or perhaps with a "-h" option, for "help"). 
Such a docstring should document the script's function and command line syntax, environment variables, and files. 
Usage messages can be fairly elaborate (several screens) and should be sufficient for a new user to use the command properly, as well as a complete quick reference to all options and arguments for the sophisticated user.


2. module

The docstring for a module should generally list the classes, exceptions and functions (and any other objects) that are exported by the module, with a one-line summary of each. 
(These summaries generally give less detail than the summary line in the object's docstring.) 
The docstring for a package (i.e., the docstring of the package's __init__.py module) should also list the modules and subpackages exported by the package.


3. function/method

The docstring for a function or method should summarize its behavior and document its arguments, return value(s), side effects, exceptions raised, and restrictions on when it can be called (all if applicable). 
Optional arguments should be indicated. It should be documented whether keyword arguments are part of the interface.


4. classes


The docstring for a class should summarize its behavior and list the public methods and instance variables. 
If the class is intended to be subclassed, and has an additional interface for subclasses, this interface should be listed separately (in the docstring). 
The class constructor should be documented in the docstring for its __init__ method. Individual methods should be documented by their own docstring.
It can be taken as convention: Inserting a blank line after all docstrings (one-line or multi-line) that document a class 
	-- generally speaking, the class's methods are separated from each other by a single blank line, and the docstring needs to be offset from the first method by a blank line.


.